{"mappings":"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","sources":["public/js/index.js"],"sourcesContent":["\nvar container, scene, camera, renderer, controls;\nvar keyboard = new THREEx.KeyboardState();\nvar clock = new THREE.Clock;\nvar roadSegments = [],roadLength = 1500;\nvar movingCube;\nvar collideMeshList = [];\nvar cubes = [];\nvar message = document.getElementById(\"message\");\nvar crash = false;\nvar score = 0;\nvar scoreText = document.getElementById(\"score\");\nvar id = 0;\nvar countNumber = 0,moveSpeed = 200,moveLength  = 0,elapseTime = 60,surfaceLength = 0;\nvar crashId = \" \";\nvar lastCrashId = \" \";\nlet gameObject = {\n    elapseTime:0,\n    startingSpeed:0,\n    maxSpeed:0,\n    playerMinSpeed:0,\n    playerMaxSpeed:0,\n    blocksAppearTime:0,\n    blocksExistNum:0,\n    blocksMaxNum:0\n}\nvar isplayed = true;\ninit();\nanimate();\n\nfunction init() {\n    // Scene\n    scene = new THREE.Scene();\n    // Camera\n    var screenWidth = window.innerWidth;\n    var screenHeight = window.innerHeight;\n    camera = new THREE.PerspectiveCamera(45, screenWidth / screenHeight, 1, 4000);\n    camera.position.set(0, 170, 400);\n\n    // Renderer\n    if (Detector.webgl) {\n        renderer = new THREE.WebGLRenderer({ antialias: true });\n    } else {\n        renderer = new THREE.CanvasRenderer();\n    }\n    renderer.setSize(screenWidth * 0.85, screenHeight * 0.85);\n    container = document.getElementById(\"ThreeJS\");\n    container.appendChild(renderer.domElement);\n\n    THREEx.WindowResize(renderer, camera);\n    controls = new THREE.OrbitControls(camera, renderer.domElement);\n\n    const light = new THREE.AmbientLight(0xffffff, 1);\nscene.add(light);\n\n\n   // cube wireframes \n    var cubeGeometry = new THREE.BoxGeometry(50, 25, 60, 5, 5, 5);\n    var wireMaterial = new THREE.MeshBasicMaterial({\n        color: 0x00ff00,\n        wireframe: false\n    });\n\n\n    movingCube = new THREE.Mesh(cubeGeometry, wireMaterial);\n    movingCube.position.set(0, 25, -20);\n    scene.add(movingCube);\n\nfor(let i = 0;i<5;i++){\ncreateSurface();\n}\n /// loading our ball \n  /*var ball;\n\n  loader.load(\"/textures/ball/scene.gltf\",(gltf)=>{\n         ball = gltf.scene;\n           ball.scale.set(1,1,1);\n             scene.add(ball)\n  },undefined,(err)=>{\n        console.error(err)\n  })\n        */\n}\nfunction destoryMesh(mesh){\n     if(!mesh) return;\n      scene.remove(mesh);\n      if(mesh.geometry) mesh.geometry.dispose();\n      if(mesh.material){\n        if(Array.isArray(mesh.material)){\n             mesh.material.forEach(mat => mat.dispose())\n        }else{\n            mesh.material.dispose();\n        }\n      }\n      mesh = null;\n}\nfunction createSurface(){\n    // let side material\n var sidematerial = new THREE.MeshBasicMaterial({\n        color: 0x00ff00,\n        wireframe: false\n    });\n// --- Add Road/Floor ---\nvar textureLoader = new THREE.TextureLoader();\nvar roadTexture = textureLoader.load('/textures/road.jpg'); // place a road.jpg in your textures folder\nroadTexture.wrapS = THREE.ClampToEdgeWrapping;\nroadTexture.wrapT = THREE.ClampToEdgeWrapping;\nroadTexture.repeat.set(1, 1); // adjust for stretching\n     \nvar roadMaterial = new THREE.MeshPhongMaterial({ map: roadTexture });\n\n    let segGeom = new THREE.PlaneGeometry(600, roadLength);\n    let lsideGeom = new THREE.PlaneGeometry(600,roadLength);\n      let lsideMesh = new THREE.Mesh(lsideGeom, sidematerial);\n       lsideMesh.position.set(300,300,-surfaceLength* roadLength);\n       lsideMesh.rotation.y = -Math.PI / 2;\n        lsideMesh.rotation.x = -Math.PI / 2;\n\n     let rsideGeom = new THREE.PlaneGeometry(600,roadLength);\n      let rsideMesh = new THREE.Mesh(rsideGeom, sidematerial);\n      rsideMesh.position.set(-300,300,-surfaceLength* roadLength);\n       rsideMesh.rotation.y = Math.PI/2;\n        rsideMesh.rotation.x = -Math.PI / 2;\n    let seg = new THREE.Mesh(segGeom, roadMaterial);\n    seg.rotation.x = -Math.PI / 2;\n    seg.position.set(0, 0, -surfaceLength * roadLength);\n    roadSegments.push(seg);\n      scene.add(lsideMesh);\n      scene.add(rsideMesh);\n       scene.add(seg);\n       roadSegments.push(seg);\nsurfaceLength++;\n}\nfunction animate() {\n     if(isplayed)\n    requestAnimationFrame(animate);\n    update();\n    \n    renderer.render(scene, camera);\n\n}\n\nfunction update() {\n    var delta = 2*clock.getDelta();\n    var moveDistance = 200 * delta;\n    var rotateAngle = Math.PI / 2 * delta;\n           elapseTime -= 1/60;\n        if((moveLength%2)==0){moveSpeed+=getRandomInt(0.8,1.5);}\n        movingCube.position.z -= (Math.min(moveSpeed,600)*delta);\n        moveLength+=1;\n        for(let i = 0;i<=roadSegments.length-1;i++){\n             const seg = roadSegments[i];\n              if(seg.position.z > movingCube.position.z+1200){\n                 \n                    roadSegments.splice(i,1);\n                     createSurface();\n                   \n                  destoryMesh(seg);\n                      \n                     \n                   \n              }\n        }\n    //            if (keyboard.pressed(\"A\")) {\n    //                camera.rotation.z -= 0.2 * Math.PI / 180;\n    //                console.log(\"press A\")\n    //            }\n    //            if (keyboard.pressed(\"D\")) {\n    //                movingCube.rotation.y += rotateAngle;\n    //            }\n\n    if (keyboard.pressed(\"left\") || keyboard.pressed(\"A\")) {\n        if (movingCube.position.x > -270)\n            movingCube.position.x -= moveDistance;\n        if (camera.position.x > -150) {\n            camera.position.x -= moveDistance * 0.6;\n            if (camera.rotation.z > -5 * Math.PI / 180) {\n                camera.rotation.z -= 0.2 * Math.PI / 180;\n            }\n        }\n    }\n    if (keyboard.pressed(\"right\") || keyboard.pressed(\"D\")) {\n        if (movingCube.position.x < 270)\n            movingCube.position.x += moveDistance;\n        if (camera.position.x < 150) {\n            camera.position.x += moveDistance * 0.6;\n            if (camera.rotation.z < 5 * Math.PI / 180) {\n                camera.rotation.z += 0.2 * Math.PI / 180;\n            }\n        }\n    }\n    if (keyboard.pressed(\"up\") || keyboard.pressed(\"W\")) {\n        movingCube.position.z -= (Math.min(moveSpeed+30,600)*delta);\n    }\n    if (keyboard.pressed(\"down\") || keyboard.pressed(\"B\")) {\n        movingCube.position.z += moveDistance;\n    }\n\n    if (!(keyboard.pressed(\"left\") || keyboard.pressed(\"right\") ||\n        keyboard.pressed(\"A\") || keyboard.pressed(\"D\"))) {\n        delta = camera.rotation.z;\n        camera.rotation.z -= delta / 10;\n    }\n    \n      if(countNumber === 0 || countNumber >=(getRandomInt(50,90))){\n          for(let i = 0;i<(getRandomInt(1,3));i++){\n             makeRandomCube();\n          }\n             countNumber = 1;\n      }\n      countNumber++;\n\n    var originPoint = movingCube.position.clone();\n      let postionAttribute = movingCube.geometry.attributes.position;\n    for (var vertexIndex = 0; vertexIndex < postionAttribute.count; vertexIndex++) {\n        let x = postionAttribute.getX(vertexIndex);\n        let y = postionAttribute.getY(vertexIndex);\n        let z = postionAttribute.getZ(vertexIndex);\n        var localVertex = new THREE.Vector3(x,y,z).clone();\n\n        var globalVertex = localVertex.applyMatrix4(movingCube.matrix);\n        var directionVector = globalVertex.sub(movingCube.position);\n\n        var ray = new THREE.Raycaster(originPoint, directionVector.clone().normalize());\n        var collisionResults = ray.intersectObjects(collideMeshList);\n        if (collisionResults.length > 0 && collisionResults[0].distance < directionVector.length()) {\n            crash = true;\n            crashId = collisionResults[0].object.name;\n            break;\n        }\n        crash = false;\n    }\n\n    if (crash) {\n        //            message.innerText = \"crash\";\n        movingCube.material.color.setHex(0x346386);\n    \n        if (crashId !== lastCrashId) {\n            score -= 100;\n            lastCrashId = crashId;\n        }\n\n    } else {\n        //            message.innerText = \"Safe\";\n        movingCube.material.color.setHex(0x00ff00);\n    }\n\n    \n\n     if(elapseTime <1){\n         isplayed = false;\n     }\n    scoreText.innerText = \"time remain:\" + Math.floor(elapseTime);\n     \n       \n // adjust speed\n\n// Camera follows the cube smoothly\ncamera.position.lerp(\n    new THREE.Vector3(movingCube.position.x, movingCube.position.y + 150, movingCube.position.z + 400),\n    0.1\n);\ncamera.lookAt(movingCube.position);\n\n\n}\n\n\n\nfunction getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\nfunction makeRandomCube() {\n    \n    var a = 1 * 50,\n        b = getRandomInt(1, 3) * 50,\n        c = 1 * 50;\n    var geometry = new THREE.BoxGeometry(a,b,c,5,5,5);\n    var material = new THREE.MeshBasicMaterial({\n        color: 0xff0000\n    });\n\n\n    var box = new THREE.Mesh(geometry, material);\n   \n    box.position.x = getRandomArbitrary((Math.max(movingCube.position.x,-300)>=-300?100:movingCube.position.x), (Math.min(movingCube.position.x,300)>=300?-100:movingCube.position.x));\n    box.position.y = 0;\n    box.position.z =  getRandomArbitrary((movingCube.position.z-1500), movingCube.position.z-3500);\n \n    cubes.push(box);\n    box.name = \"box_\" + id;\n    id++;\n    collideMeshList.push(box);\n\n    scene.add(box);\n}"],"names":[],"version":3,"file":"race-game-threejs-master.81cf15bf.js.map","sourceRoot":"/__parcel_source_root/"}